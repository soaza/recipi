{"version":3,"sources":["Common/api.tsx","Components/DefaultLayout.tsx","Components/Loader.tsx","Components/MealCard.tsx","Pages/IndividualCategoryPage.tsx","Pages/RecipePage.tsx","Components/RecipeCategoryCard.tsx","Pages/RecipesPage.tsx","Components/RecipeCard.tsx","Pages/SavedRecipePage.tsx","App.tsx","index.tsx"],"names":["getAllRecipeCategories","a","axios","get","res","data","console","log","getRecipesByCategories","category","getMealById","id","Content","Layout","Sider","DefaultLayout","props","children","navigate","useNavigate","handleNavigation","path","style","minHeight","className","theme","defaultSelectedKeys","mode","Item","onClick","icon","SearchOutlined","HeartOutlined","margin","backgroundColor","padding","Loader","height","width","display","justifyContent","alignItems","Paragraph","Typography","MealCard","meal","hoverable","idMeal","replace","cover","alt","src","strMealThumb","title","strMeal","description","ellipsis","rows","expandable","IndividualCategoryPage","URL","window","location","href","searchParams","useState","meals","setMeals","loading","setLoading","useEffect","fetchRecipesByCategory","gutter","map","index","RecipePage","mealId","mealData","setMealData","saved","setSaved","fetchMealData","localStorage","getItem","JSON","parse","includes","justify","span","color","strInstructions","marginBottom","Array","x","i","strSource","disabled","savedRecipes","push","setItem","stringify","type","RecipeCategoryCard","e","strCategory","idCategory","strCategoryThumb","onExpand","stopPropagation","strCategoryDescription","RecipesPage","categories","setCategories","loadRecipes","RecipeCard","marginTop","SavedRecipePage","setSavedRecipes","App","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b575bfbf.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getAllRecipeCategories = async () => {\n  try {\n    const res = await axios.get(\n      `https://www.themealdb.com/api/json/v1/1/categories.php`\n    );\n\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRecipesByCategories = async (category: string) => {\n  try {\n    const res = await axios.get(\n      `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`\n    );\n\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMealById = async (id: string) => {\n  try {\n    const res = await axios.get(\n      `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`\n    );\n\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { Layout, Menu } from \"antd\";\n\nimport { SearchOutlined, HeartOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst { Content, Sider } = Layout;\n\ninterface IProps {\n  children?: any;\n}\n\nconst DefaultLayout: React.FC<IProps> = (props) => {\n  const { children } = props;\n  const navigate = useNavigate();\n\n  const handleNavigation = (path: string) => {\n    navigate(path);\n  };\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Sider>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n          <Menu.Item\n            onClick={() => handleNavigation(\"/recipes\")}\n            key=\"1\"\n            icon={<SearchOutlined />}\n          >\n            View Recipes\n          </Menu.Item>\n          <Menu.Item\n            onClick={() => handleNavigation(\"/saved\")}\n            key=\"2\"\n            icon={<HeartOutlined />}\n          >\n            My Recipes\n          </Menu.Item>\n        </Menu>\n      </Sider>\n\n      <Content style={{ margin: \"16px 16px\" }}>\n        <div style={{ backgroundColor: \"#fff\", padding: 24, minHeight: 360 }}>\n          {children}\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default DefaultLayout;\n","import { Spin } from \"antd\";\nimport * as React from \"react\";\n\nconst Loader: React.FC = () => {\n  return (\n    <Spin\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    />\n  );\n};\nexport default Loader;\n","import { IMeal } from \"../Common/types.d\";\nimport { Card, Typography } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport { useNavigate } from \"react-router\";\n\ninterface IProps {\n  meal: IMeal;\n}\n\nconst { Paragraph } = Typography;\n\nconst MealCard: React.FC<IProps> = (props) => {\n  const { meal } = props;\n\n  const navigate = useNavigate();\n\n  const handleNavigate = () => {\n    navigate(`/recipe?mealId=${meal.idMeal}`, { replace: true });\n  };\n\n  return (\n    <Card\n      hoverable\n      onClick={handleNavigate}\n      style={{ width: 350, minHeight: 350 }}\n      cover={<img alt={meal.idMeal} src={meal.strMealThumb} />}\n    >\n      <Meta\n        title={meal.strMeal}\n        description={\n          <Paragraph\n            ellipsis={{\n              rows: 3,\n              expandable: true,\n            }}\n          ></Paragraph>\n        }\n      />\n    </Card>\n  );\n};\n\nexport default MealCard;\n","import { Col, Row } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { getRecipesByCategories } from \"../Common/api\";\nimport { IMeal } from \"../Common/types.d\";\nimport DefaultLayout from \"../Components/DefaultLayout\";\nimport Loader from \"../Components/Loader\";\nimport MealCard from \"../Components/MealCard\";\n\nconst IndividualCategoryPage = () => {\n  const category = new URL(window.location.href).searchParams.get(\n    \"category\"\n  ) as string;\n\n  const [meals, setMeals] = useState<IMeal[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchRecipesByCategory = async () => {\n      setLoading(true);\n\n      const res = await getRecipesByCategories(category);\n      setMeals(res.meals);\n      setLoading(false);\n    };\n\n    fetchRecipesByCategory();\n  }, [category]);\n\n  return (\n    <DefaultLayout>\n      {loading && <Loader />}\n\n      {!loading && meals && (\n        <Row gutter={[20, 20]}>\n          {meals.map((meal, index) => {\n            return (\n              <Col key={index}>\n                <MealCard meal={meal} />\n              </Col>\n            );\n          })}\n        </Row>\n      )}\n    </DefaultLayout>\n  );\n};\n\nexport default IndividualCategoryPage;\n","import HeartOutlined from \"@ant-design/icons/lib/icons/HeartOutlined\";\nimport { Button, Col, Row } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { getMealById } from \"../Common/api\";\nimport { IMeal } from \"../Common/types.d\";\nimport DefaultLayout from \"../Components/DefaultLayout\";\nimport Loader from \"../Components/Loader\";\n\nconst RecipePage = () => {\n  const mealId = new URL(window.location.href).searchParams.get(\n    \"mealId\"\n  ) as string;\n\n  const [mealData, setMealData] = useState<IMeal>();\n  const [loading, setLoading] = useState(false);\n  const [saved, setSaved] = useState(false);\n\n  useEffect(() => {\n    const fetchMealData = async () => {\n      setLoading(true);\n      const res = await getMealById(mealId);\n\n      setMealData(res.meals[0]);\n      setLoading(false);\n    };\n\n    fetchMealData();\n  }, [mealId]);\n\n  useEffect(() => {\n    const savedRecipes = localStorage.getItem(\"recipes\")\n      ? JSON.parse(localStorage.getItem(\"recipes\") as string)\n      : [];\n\n    if (savedRecipes.includes(mealId)) {\n      setSaved(true);\n    }\n  }, []);\n\n  const saveRecipe = () => {\n    const savedRecipes = localStorage.getItem(\"recipes\")\n      ? JSON.parse(localStorage.getItem(\"recipes\") as string)\n      : [];\n\n    if (!savedRecipes.includes(mealId)) {\n      savedRecipes.push(mealId);\n      localStorage.setItem(\"recipes\", JSON.stringify(savedRecipes));\n      setSaved(true);\n    }\n  };\n\n  return (\n    <DefaultLayout>\n      {loading && <Loader />}\n      {!loading && mealData && (\n        <Row justify=\"space-between\">\n          <Col span={10}>\n            <img\n              alt={mealData.idMeal}\n              width=\"100%\"\n              src={mealData.strMealThumb}\n            />\n          </Col>\n          <Col span={12}>\n            <h1>{mealData.strMeal}</h1>\n            <b> Instructions:</b>\n\n            <p style={{ color: \"gray\" }}>{mealData.strInstructions}</p>\n\n            <div style={{ marginBottom: 10 }}>\n              <b>Ingredients:</b>\n              {[...Array(10)].map((x, i) => {\n                if ((mealData as any)[`strMeasure${i}`]) {\n                  return (\n                    <div key={i}>\n                      ({(mealData as any)[`strMeasure${i}`]})\n                      {(mealData as any)[`strIngredient${i}`]}\n                    </div>\n                  );\n                } else {\n                  return <div key={i} />;\n                }\n              })}\n            </div>\n\n            <p>\n              <i>\n                See more: <a href={mealData.strSource}> {mealData.strSource}</a>\n              </i>\n            </p>\n\n            <Button disabled={saved} onClick={saveRecipe} type=\"primary\">\n              <HeartOutlined />\n              {saved ? \"Saved\" : \"Save\"}\n            </Button>\n          </Col>\n        </Row>\n      )}\n    </DefaultLayout>\n  );\n};\n\nexport default RecipePage;\n","import { Card, Typography } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport { IRecipeCategory } from \"../Common/types.d\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst { Paragraph } = Typography;\n\ninterface IProps {\n  category: IRecipeCategory;\n}\n\nconst RecipeCategoryCard: React.FC<IProps> = (props) => {\n  const { category } = props;\n  const navigate = useNavigate();\n\n  const handleNavigate = () => {\n    navigate(`/categories?category=${category.strCategory}`);\n  };\n\n  return (\n    <Card\n      onClick={(e) => {\n        handleNavigate();\n      }}\n      hoverable\n      style={{ width: 240, minHeight: 350 }}\n      cover={<img alt={category.idCategory} src={category.strCategoryThumb} />}\n    >\n      <Meta\n        title={category.strCategory}\n        description={\n          <Paragraph\n            ellipsis={{\n              rows: 3,\n              expandable: true,\n              onExpand: (e) => {\n                e.stopPropagation();\n              },\n            }}\n          >\n            {category.strCategoryDescription}\n          </Paragraph>\n        }\n      />\n    </Card>\n  );\n};\n\nexport default RecipeCategoryCard;\n","import { Col, Row } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { getAllRecipeCategories } from \"../Common/api\";\nimport { IRecipeCategory } from \"../Common/types.d\";\nimport DefaultLayout from \"../Components/DefaultLayout\";\nimport Loader from \"../Components/Loader\";\nimport RecipeCategoryCard from \"../Components/RecipeCategoryCard\";\n\nconst RecipesPage = () => {\n  const [categories, setCategories] = useState<IRecipeCategory[]>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadRecipes = async () => {\n      setLoading(true);\n      const res = await getAllRecipeCategories();\n\n      setCategories(res.categories);\n      setLoading(false);\n    };\n\n    loadRecipes();\n  }, []);\n\n  return (\n    <DefaultLayout>\n      {loading && <Loader />}\n\n      {!loading && categories && (\n        <Row gutter={[10, 10]}>\n          {categories &&\n            categories.map((category, index) => {\n              return (\n                <Col key={index}>\n                  <RecipeCategoryCard category={category} />\n                </Col>\n              );\n            })}\n        </Row>\n      )}\n    </DefaultLayout>\n  );\n};\n\nexport default RecipesPage;\n","import HeartOutlined from \"@ant-design/icons/lib/icons/HeartOutlined\";\nimport { Button, Col, Divider, Row } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { getMealById } from \"../Common/api\";\nimport { IMeal } from \"../Common/types.d\";\nimport DefaultLayout from \"../Components/DefaultLayout\";\nimport Loader from \"../Components/Loader\";\n\ninterface IProps {\n  mealId: string;\n}\nconst RecipeCard: React.FC<IProps> = (props) => {\n  const { mealId } = props;\n\n  const [mealData, setMealData] = useState<IMeal>();\n\n  useEffect(() => {\n    const fetchMealData = async () => {\n      const res = await getMealById(mealId);\n\n      setMealData(res.meals[0]);\n    };\n\n    fetchMealData();\n  }, [mealId]);\n\n  return (\n    <div style={{ marginTop: 10 }}>\n      {mealData && (\n        <Row justify=\"space-between\">\n          <Col span={10}>\n            <img\n              alt={mealData.idMeal}\n              width=\"100%\"\n              src={mealData.strMealThumb}\n            />\n          </Col>\n          <Col span={12}>\n            <h1>{mealData.strMeal}</h1>\n            <b> Instructions:</b>\n\n            <p style={{ color: \"gray\" }}>{mealData.strInstructions}</p>\n\n            <div style={{ marginBottom: 10 }}>\n              <b>Ingredients:</b>\n              {[...Array(10)].map((x, i) => {\n                if ((mealData as any)[`strMeasure${i}`]) {\n                  return (\n                    <div key={i}>\n                      ({(mealData as any)[`strMeasure${i}`]})\n                      {(mealData as any)[`strIngredient${i}`]}\n                    </div>\n                  );\n                } else {\n                  return <div key={i} />;\n                }\n              })}\n            </div>\n\n            <p>\n              <i>\n                See more: <a href={mealData.strSource}> {mealData.strSource}</a>\n              </i>\n            </p>\n          </Col>\n        </Row>\n      )}\n\n      <Divider />\n    </div>\n  );\n};\n\nexport default RecipeCard;\n","import { useEffect, useState } from \"react\";\nimport DefaultLayout from \"../Components/DefaultLayout\";\nimport RecipeCard from \"../Components/RecipeCard\";\n\nconst SavedRecipePage = () => {\n  const [savedRecipes, setSavedRecipes] = useState([]);\n\n  useEffect(() => {\n    const savedRecipes = localStorage.getItem(\"recipes\")\n      ? JSON.parse(localStorage.getItem(\"recipes\") as string)\n      : [];\n\n    setSavedRecipes(savedRecipes);\n  }, []);\n  return (\n    <DefaultLayout>\n      {savedRecipes.map((mealId, index) => {\n        return <RecipeCard mealId={mealId} key={index} />;\n      })}\n    </DefaultLayout>\n  );\n};\n\nexport default SavedRecipePage;\n","import { Route, Routes } from \"react-router\";\nimport \"./App.css\";\nimport IndividualCategoryPage from \"./Pages/IndividualCategoryPage\";\nimport RecipePage from \"./Pages/RecipePage\";\nimport RecipesPage from \"./Pages/RecipesPage\";\nimport SavedRecipePage from \"./Pages/SavedRecipePage\";\n\nfunction App() {\n  return (\n    <Routes>\n      {/* Static routes */}\n      <Route path=\"/saved\" element={<SavedRecipePage />} />\n      <Route path=\"/recipes\" element={<RecipesPage />} />\n      {/* Dynamic routes */}\n      <Route path=\"/categories\" element={<IndividualCategoryPage />} />\n      <Route path=\"/recipe\" element={<RecipePage />} />\n      <Route path=\"/\" element={<RecipesPage />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}